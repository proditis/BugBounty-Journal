dns_enum_host:
  stage: information_gathering
  artifacts:
    name: "$DOMAIN:$CI_JOB_NAME"
    paths:
      - host/*.log
  before_script:
    - apt-get update
    - apt-get install -yqq dnsutils
    - mkdir -p host
  script:
# You can split the script commands into multiple "jobs" to increase parallelism
    - host -t txt selector1._domainkey.${DOMAIN} 2>&1 | tee host/dkim.log || true
    - host -t txt selector2._domainkey.${DOMAIN} 2>&1 | tee -a host/dkim.log || true
    - host -t txt ${DOMAIN} 2>&1 | tee host/txt.log || true
    - host -t ns  ${DOMAIN} 2>&1 | tee host/ns.log || true
    - host -t mx  ${DOMAIN} 2>&1 | tee host/mx.log || true
    - host -t any ${DOMAIN} 2>&1 | tee host/any.log || true
    - host ${DOMAIN} 2>&1 | tee host/a.log || true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      allow_failure: true
      when: manual


dns_enum_hosts:
  stage: information_gathering
  artifacts:
    name: "$DOMAIN:$CI_JOB_NAME"
    paths:
      - host/*.log
  before_script:
    - apt-get update
    - apt-get install -yqq dnsutils
    - mkdir -p host
  script:
    - |
      {
      for DOMAIN in $(<domain.list);do
      host -t txt selector1._domainkey.${DOMAIN} 2>&1 | tee -a host/dkim.log || true
      host -t txt selector2._domainkey.${DOMAIN} 2>&1 | tee -a host/dkim.log || true
      host -t txt ${DOMAIN} 2>&1 | tee -a host/txt.log || true
      host -t ns  ${DOMAIN} 2>&1 | tee -a host/ns.log || true
      host -t mx  ${DOMAIN} 2>&1 | tee -a host/mx.log || true
      host -t any ${DOMAIN} 2>&1 | tee -a host/any.log || true
      host ${DOMAIN} 2>&1 | tee -a host/a.log || true
      done
      }
# You can split the script commands into multiple "jobs" to increase parallelism
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      allow_failure: true
      when: manual
